# [문제] 곱하기 혹은 더하기

# 각 자리가 숫자(0-9)로만 이루어진 문자열 S가 주어졌을 때, 왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며 숫자 사시에 'x' 혹은 '+' 연산자를 넣어 결과적으로 만들어질 수 있는 가장 큰 수를 구하는 프로그램을 작성하세요. 단, + 보다 x 를 먼저 계산하는 일반적인 방식과는 달리, 모든 연산은 왼쪽에서부터 순서대로 이루어진다고 가정합니다
# ex) 02984라는 문자열로 만들 수 있는 가장 큰 수는 ((((0+2) X 9) X 8) X 4) = 576
S = input()
result = int(S[0])
for i in range(1,len(S)):
  num = int(S[i])
  if num <=1 or result <= 1:
    result+= num
  else:
    result*= num
print(result)

# [문제] 1이 될 때 까지

# 어떠한 수 N이 1이 될 때까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 합니다. 단, 두번째 연산은 N 이 K 로 나누어 떨어질 때만 선택할 수 있습니다.
#   1. N 에서 1을 뺍니다.
#   2. N을 K로 나눕니다. 
# N 과 K가 주어질 때 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 최소 횟수를 구하는 프로그램을 작성하세요
N , K = map(int, input().split())
result = 0 
while True:
	target = (N//K) * K 
    # N이 K로 나누어 떨어지는 가장 가까운 N을 target으로 저장
    result += (N-target)
    N = target
    if N < K:
    	break
    result += 1
    N //= K
 result += (N-1)
 print(result)
